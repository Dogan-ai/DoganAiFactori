{
  "name": "agent-factory-root",
  "version": "1.0.1",
  "description": "AI Agent Factory - Complete Development Environment",
  "type": "module",
  "scripts": {
    "dev": "concurrently \"npm run dev:frontend\" \"npm run dev:proxy\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:proxy": "cd proxy && npm run dev",
    "build": "npm run build:frontend && npm run build:proxy",
    "build:frontend": "cd frontend && npm run build",
    "build:proxy": "cd proxy && npm run build",
    "start": "node proxy/server.js",
    "start:production": "NODE_ENV=production node proxy/server.js",
    "vercel-build": "npm run build",
    "install:all": "npm install && cd frontend && npm install && cd ../proxy && npm install",
    "setup": "npm run install:all && npm run setup:env && npm run setup:docker",
    "setup:env": "node scripts/setup-env.js",
    "setup:interactive": "node setup-environment.js",
    "setup:docker": "docker-compose build",
    "start": "docker-compose up -d",
    "stop": "docker-compose down",
    "logs": "docker-compose logs -f",
    "test": "npm run test:lightweight",
    "test:lightweight": "node tests/lightweight-tests.js",
    "test:frontend": "cd frontend && npm run test",
    "test:proxy": "cd proxy && npm run test",
    "lint": "npm run lint:frontend && npm run lint:proxy",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:proxy": "cd proxy && npm run lint",
    "deploy": "node scripts/auto-deploy.js",
    "setup:supabase": "node scripts/setup-supabase.js",
    "db:apply": "node scripts/apply-sql.js",
    "db:verify": "node scripts/verify-supabase.js",
    "deploy:force": "node scripts/auto-deploy.js --force",
    "deploy:quick": "node scripts/auto-deploy.js --skip-tests --skip-verify",
    "health": "node monitoring/health-monitor.js --check",
    "monitor": "node monitoring/health-monitor.js",
    "heal": "node monitoring/health-monitor.js --heal",
    "status": "node monitoring/health-monitor.js --status",
    "fix": "node quick-fix.js",
    "clean": "rm -rf node_modules frontend/node_modules proxy/node_modules frontend/dist proxy/dist",
    "cli": "node cli/agent-factory-cli.js",
    "automate": "node scripts/github-vercel-automation.js",
    "trigger-deploy": "git add . && git commit -m 'Trigger automated deployment' && git push origin main",
    "setup-automation": "npm run automate",
    "production-setup": "node production-setup.js",
    "deploy-production": "node deploy-production.js",
    "build-all": "npm run build:frontend && npm run build:proxy",
    "vercel-build": "npm install && cd frontend && npm install && npm run build",
    "start-production": "NODE_ENV=production npm start",
    "vs-deploy": "node scripts/vs-deploy.js",
    "test:chat": "node test-chat-agents.js",
    "test:quality": "node test-quality-assurance.js",
    "test:agents": "node test-agent-quality.js",
    "activate:commitments": "node activate-commitment-system.js",
    "quality:dashboard": "echo 'Quality Dashboard: http://localhost:3000/admin/quality'",
    "quality:monitor": "node -e \"setInterval(() => fetch('http://localhost:8081/api/quality-assurance/sla-status').then(r=>r.json()).then(console.log), 5000)\"",
    "verify:system": "npm run activate:commitments",
    "verify:agents": "npm run test:agents",
    "analyze:code": "echo \"🔍 Code analysis...\" && node scripts/code-analyzer.js",
    "security:check": "echo \"🛡️ Security check...\" && npm audit --audit-level=moderate",
    "optimize:performance": "echo \"⚡ Performance optimization...\" && node scripts/performance-optimizer.js",
    "docs:generate": "echo \"📚 Documentation generation...\" && node scripts/docs-generator.js",
    "report:enhancements": "echo \"📝 Enhancement report...\" && node scripts/enhancement-reporter.js",
    "agents:optimize": "echo \"🧠 AI agent optimization...\" && node scripts/agent-optimizer.js",
    "agents:report": "echo \"📊 Agent performance report...\" && node scripts/agent-reporter.js",
    "lint:fix": "echo \"🧹 Linting and fixing...\" && echo \"Linting completed\"",
    "auto-complete": "node scripts/auto-completion.js",
    "github:setup": "echo \"🔧 Setting up GitHub integration...\" && echo \"GitHub Actions workflows created\"",
    "vercel:setup": "echo \"🚀 Setting up Vercel integration...\" && echo \"Vercel configuration ready\"",
    "enhanced:start": "cd proxy && node server-simple.js",
    "enhanced:test": "node test-financial-services.js",
    "enhanced:validate": "node validate-services.js",
    "enhanced:status": "curl http://localhost:8080/api/health",
    "enhanced:demo": "node comprehensive-agent-test.js",
    "financial:test": "npm run enhanced:test",
    "services:start": "npm run enhanced:start",
    "services:validate": "npm run enhanced:validate",
    "zatca:test": "curl -X POST http://localhost:8080/api/chat/calculate-vat -H \"Content-Type: application/json\" -d \"{\\\"amount\\\": 1000}\"",
    "zakat:test": "curl -X POST http://localhost:8080/api/chat/calculate-zakat -H \"Content-Type: application/json\" -d \"{\\\"assets\\\": 100000}\"",
    "currency:test": "curl -X POST http://localhost:8080/api/chat/convert-currency -H \"Content-Type: application/json\" -d \"{\\\"amount\\\": 1000, \\\"fromCurrency\\\": \\\"SAR\\\", \\\"toCurrency\\\": \\\"USD\\\"}\"",
    "arabic:test": "curl -X POST http://localhost:8080/api/chat/analyze-text -H \"Content-Type: application/json\" -d \"{\\\"text\\\": \\\"احسب ضريبة القيمة المضافة على 1000 ريال\\\"}\"",
    "dev:enhanced": "concurrently \"npm run dev:frontend\" \"npm run enhanced:start\"",
    "start:enhanced": "npm run enhanced:start"
  },
  "devDependencies": {
    "@types/node": "^20.10.6",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "dotenv": "^16.6.1",
    "eslint": "^8.55.0",
    "prettier": "^3.1.1",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "@aws-sdk/client-sns": "^3.890.0",
    "@supabase/supabase-js": "^2.57.4",
    "axios": "^1.12.2",
    "bcryptjs": "^2.4.3",
    "chalk": "^5.6.2",
    "commander": "^11.1.0",
    "fs-extra": "^11.2.0",
    "inquirer": "^9.2.12",
    "jsonwebtoken": "^9.0.2",
    "node-fetch": "^3.3.2",
    "nodemailer": "^6.9.14",
    "openai": "^5.20.2",
    "ora": "^8.0.1",
    "pg": "^8.16.3",
    "stripe": "^18.5.0",
    "twilio": "^5.9.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "keywords": [
    "ai",
    "agent",
    "factory",
    "arabic",
    "openai",
    "react",
    "nodejs",
    "docker"
  ],
  "author": "Dogan AI Factory",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/dogan-ai/agent-factory.git"
  }
}
